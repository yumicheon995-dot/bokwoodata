# 🚀 GitHub & Vercel 배포 가이드

## 📋 목차
1. [GitHub 저장소 생성](#1-github-저장소-생성)
2. [Git 초기 설정](#2-git-초기-설정)
3. [코드 업로드](#3-코드-업로드)
4. [Vercel 배포](#4-vercel-배포)
5. [환경 변수 설정](#5-환경-변수-설정)
6. [커스텀 도메인](#6-커스텀-도메인-설정)
7. [문제 해결](#7-문제-해결)

---

## 1. GitHub 저장소 생성

### 1.1 GitHub 웹사이트 접속
1. [github.com](https://github.com) 접속
2. 로그인 또는 회원가입

### 1.2 새 저장소 생성
1. 우상단 **"+" 버튼** 클릭
2. **"New repository"** 선택
3. 저장소 정보 입력:
   ```
   Repository name: card-liquidation-landing
   Description: 카드유동화 전문상담 랜딩페이지
   Visibility: Public (또는 Private)
   ```
4. **"Create repository"** 클릭

---

## 2. Git 초기 설정

### 2.1 Git 사용자 정보 설정 (최초 1회만)
```bash
git config --global user.name "당신의이름"
git config --global user.email "your-email@example.com"
```

### 2.2 SSH 키 설정 (권장)
```bash
# SSH 키 생성
ssh-keygen -t rsa -b 4096 -C "your-email@example.com"

# SSH 키를 GitHub에 추가
# 생성된 공개키를 GitHub Settings > SSH Keys에 등록
cat ~/.ssh/id_rsa.pub
```

---

## 3. 코드 업로드

### 3.1 프로젝트 폴더에서 터미널 열기
```bash
# 현재 위치 확인
pwd
# 프로젝트 파일들 확인
ls -la
```

### 3.2 Git 저장소 초기화 및 업로드
```bash
# 1. Git 저장소 초기화
git init

# 2. 모든 파일 스테이징
git add .

# 3. 첫 번째 커밋
git commit -m "카드유동화 랜딩페이지 초기 업로드"

# 4. 메인 브랜치 설정
git branch -M main

# 5. GitHub 저장소 연결 (your-username을 본인 GitHub 아이디로 변경)
git remote add origin https://github.com/your-username/card-liquidation-landing.git

# 6. GitHub에 업로드
git push -u origin main
```

### 3.3 HTTPS vs SSH 연결
```bash
# HTTPS (토큰 인증 필요)
git remote add origin https://github.com/your-username/card-liquidation-landing.git

# SSH (SSH 키 설정 후)
git remote add origin git@github.com:your-username/card-liquidation-landing.git
```

---

## 4. Vercel 배포

### 4.1 Vercel 회원가입
1. [vercel.com](https://vercel.com) 접속
2. **"Sign up"** 클릭
3. **"Continue with GitHub"** 선택

### 4.2 프로젝트 배포
1. Vercel 대시보드에서 **"New Project"** 클릭
2. GitHub 저장소에서 **card-liquidation-landing** 선택
3. **"Import"** 클릭
4. 프로젝트 설정 확인:
   ```
   Project Name: card-liquidation-landing
   Framework Preset: Next.js
   Root Directory: ./
   Build Command: npm run build
   Output Directory: .next
   ```
5. **"Deploy"** 클릭

### 4.3 배포 완료
- 배포 완료 후 **`https://your-project.vercel.app`** URL 생성
- 이 URL로 사이트 접속 가능

---

## 5. 환경 변수 설정

### 5.1 Vercel에서 환경 변수 추가
1. Vercel 프로젝트 > **Settings** > **Environment Variables**
2. 다음 변수들 추가:

```env
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
ADMIN_EMAIL=admin@yourcompany.com
```

### 5.2 Gmail 앱 비밀번호 생성
1. Gmail 계정 > 보안 설정
2. **2단계 인증** 활성화
3. **앱 비밀번호** 생성
4. 생성된 16자리 비밀번호를 `SMTP_PASS`에 사용

---

## 6. 커스텀 도메인 설정

### 6.1 도메인 연결
1. Vercel 프로젝트 > **Settings** > **Domains**
2. **Add Domain** 클릭
3. 도메인 입력 (예: `cardliquidation.co.kr`)
4. DNS 설정 안내에 따라 네임서버 설정

### 6.2 DNS 설정 예시
```
Type: CNAME
Name: @
Value: cname.vercel-dns.com

Type: CNAME  
Name: www
Value: cname.vercel-dns.com
```

---

## 7. 문제 해결

### 7.1 일반적인 오류들

**🔴 인증 오류**
```bash
# Personal Access Token 사용
# GitHub > Settings > Developer settings > Personal access tokens
# 생성 후 비밀번호 대신 토큰 사용
```

**🔴 Git 초기화 오류**
```bash
# 기존 .git 폴더가 있는 경우
rm -rf .git
git init
```

**🔴 빌드 오류**
```bash
# 의존성 설치 확인
npm install
npm run build
```

### 7.2 유용한 Git 명령어

```bash
# 현재 상태 확인
git status

# 변경사항 확인
git diff

# 커밋 히스토리 확인
git log --oneline

# 원격 저장소 확인
git remote -v

# 브랜치 확인
git branch -a
```

### 7.3 코드 업데이트 방법

```bash
# 1. 코드 수정 후
git add .
git commit -m "업데이트 내용 설명"
git push

# 2. 자동으로 Vercel에서 재배포됨
```

---

## 📞 지원

문제가 발생하면:
1. **GitHub Issues** 생성
2. **Vercel 로그** 확인 (Functions 탭)
3. **브라우저 개발자 도구** 콘솔 확인

---

## ✅ 완료 체크리스트

- [ ] GitHub 저장소 생성
- [ ] Git 초기 설정 완료
- [ ] 코드 업로드 완료
- [ ] Vercel 계정 생성
- [ ] 프로젝트 배포 완료
- [ ] 환경 변수 설정
- [ ] 이메일 기능 테스트
- [ ] 모바일 반응형 확인
- [ ] 커스텀 도메인 설정 (선택)

**🎉 축하합니다! 카드유동화 랜딩 페이지가 성공적으로 배포되었습니다!**
